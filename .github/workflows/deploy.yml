name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mlops-water-potability

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest -v --tb=short || true

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY }}/tejasthange3/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker build -t ${{ env.REGISTRY }}/tejasthange3/${{ env.IMAGE_NAME }}:latest .

      - name: Log in to Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u $ --password-stdin

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/tejasthange3/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/tejasthange3/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            echo "ðŸš€ Deploying to EC2..."

            # Clone or update repo
            if [ -d ~/Mlops-Project ]; then
              cd ~/Mlops-Project
              git pull origin main || true
            else
              git clone https://github.com/TejasThange3/Mlops-Project.git ~/Mlops-Project
              cd ~/Mlops-Project
            fi

            # Pull latest image and deploy
            docker pull ${{ env.REGISTRY }}/tejasthange3/${{ env.IMAGE_NAME }}:latest || true
            docker compose down || true
            docker compose up -d

            # Verify deployment
            sleep 5
            curl -s http://localhost:8000/health || true
            echo "âœ… Deployment complete!"
